# import Message from 'forums.graphql'
# import Forum from 'forums.graphql'
# import Member from 'members.graphql'

# This message can either +ve or -ve
type SuccessMessage {
  message: String!
}

union ForumCreated = Forum | SuccessMessage
union UserCreated = Member | SuccessMessage
union MessageCreated = Message | SuccessMessage

enum Status {
  """
  All forums
  """
  ALL
  """
  Only forums I've joined
  """
  JOINED
  """
  Forums I'm not in
  """
  NOT_JOINED
}

input MessageInput {
  userId: ID!
  forumId: ID!
  message: String
}

input User {
  name: String!
  avatarURL: String
}

type Mutation {
  """
  join a forum
  """
  join(userId: ID!, forumId: ID): SuccessMessage!
  """
  create a message
  """
  message(params: MessageInput!): MessageCreated!
  """
  create a forum
  """
  createForum(name: String!, userId: ID!): ForumCreated!
  """
  create a new user
  """
  createUser(params: User!): UserCreated!
}

type Query {
  """
  return members in a certain forum
  """
  members(forumId: ID!): [Member]
  """
  return a list of forums depending on a filter. Should default to 'ALL'
  """
  forums(status: Status): [Forum]
  """
  return a single forum with members and messages
  """
  forum(forumId: ID!): Forum
}

type Subscription {
  """
  subscribe to new messages
  """
  messageCreated: MessageCreated
}
